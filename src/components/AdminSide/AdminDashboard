import { useState } from 'react'
import { Bell, ChevronRight, Search, Settings, User } from 'lucide-react'
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Progress } from "@/components/ui/progress"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Tabs, TabsList, TabsTrigger } from "@/components/ui/tabs"

export default function Dashboard() {
  const [startDate, setStartDate] = useState('')
  const [endDate, setEndDate] = useState('')

  return (
    <div className="flex h-screen bg-gray-100">
      {/* Sidebar */}
      <aside className="w-64 bg-white p-6 shadow-md">
        <div className="flex items-center mb-6">
          <User className="h-6 w-6 text-gray-500" />
          <div className="relative ml-2">
            <Bell className="h-6 w-6 text-gray-500" />
            <span className="absolute top-0 right-0 h-2 w-2 rounded-full bg-red-500"></span>
          </div>
        </div>
        <div className="mb-6">
          <Input type="text" placeholder="Search for..." className="w-full" />
        </div>
        <nav>
          <Button variant="ghost" className="w-full justify-start mb-2">
            <Settings className="mr-2 h-4 w-4" /> Dashboard
          </Button>
          <Button variant="ghost" className="w-full justify-start mb-2">
            <Settings className="mr-2 h-4 w-4" /> Page Settings
          </Button>
          <Button variant="ghost" className="w-full justify-start">
            <Settings className="mr-2 h-4 w-4" /> Settings
          </Button>
        </nav>
      </aside>

      {/* Main content */}
      <main className="flex-1 p-8">
        <h1 className="text-3xl font-bold mb-6">Dashboard</h1>

        {/* Tabs */}
        <Tabs defaultValue="menu1" className="mb-6">
          <TabsList>
            <TabsTrigger value="menu1">Menu</TabsTrigger>
            <TabsTrigger value="menu2">Menu 2</TabsTrigger>
            <TabsTrigger value="menu3">Menu 99+</TabsTrigger>
            <TabsTrigger value="menu4">Menu</TabsTrigger>
          </TabsList>
        </Tabs>

        {/* Date range */}
        <div className="flex items-center mb-6">
          <Input
            type="date"
            value={startDate}
            onChange={(e) => setStartDate(e.target.value)}
            className="mr-2"
          />
          <ChevronRight className="mx-2" />
          <Input
            type="date"
            value={endDate}
            onChange={(e) => setEndDate(e.target.value)}
          />
        </div>

        {/* Metric cards */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-6">
          <MetricCard title="Data" value="52.1K" change="+2.5%" />
          <MetricCard title="Data" value="420" change="-1.2%" negative />
          <MetricCard title="Data" value="38K" change="+11%" />
          <MetricCard title="Data" value="100" change="+1.2%" />
        </div>

        {/* Charts */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6">
          <Card>
            <CardHeader>
              <CardTitle>Data</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="flex justify-center items-center h-64">
                <div className="relative w-48 h-48">
                  <Progress value={67} className="h-48 w-48" />
                  <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-4xl font-bold">
                    67%
                  </div>
                </div>
              </div>
              <div className="flex justify-center mt-4">
                <div className="flex items-center mr-4">
                  <div className="w-3 h-3 rounded-full bg-gray-500 mr-2"></div>
                  <span>Achieved</span>
                </div>
                <div className="flex items-center">
                  <div className="w-3 h-3 rounded-full bg-gray-300 mr-2"></div>
                  <span>Remaining</span>
                </div>
              </div>
            </CardContent>
          </Card>
          <Card>
            <CardHeader>
              <CardTitle>Data</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="flex justify-center items-center h-64">
                {/* Placeholder for pie chart */}
                <div className="w-48 h-48 rounded-full border-8 border-black"></div>
              </div>
              <div className="grid grid-cols-2 gap-4 mt-4">
                <div className="flex items-center">
                  <div className="w-3 h-3 rounded-full bg-black mr-2"></div>
                  <span>Data</span>
                  <span className="ml-auto">38K</span>
                  <span className="text-gray-500 ml-2">72.94%</span>
                </div>
                <div className="flex items-center">
                  <div className="w-3 h-3 rounded-full bg-gray-300 mr-2"></div>
                  <span>Data</span>
                  <span className="ml-auto">14.1K</span>
                  <span className="text-gray-500 ml-2">27.06%</span>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Table and Donut Chart */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          <Card>
            <CardHeader>
              <CardTitle>Data</CardTitle>
            </CardHeader>
            <CardContent>
              <table className="w-full">
                <tbody>
                  {[
                    { label: 'Data', percentage: '36.27%', value: '18.9K' },
                    { label: 'Data', percentage: '14.78%', value: '7.7K' },
                    { label: 'Data', percentage: '12.28%', value: '6.4K' },
                    { label: 'Data', percentage: '10.56%', value: '5.5K' },
                    { label: 'Data', percentage: '10.36%', value: '5.4K' },
                    { label: 'Data', percentage: '8.06%', value: '4.2K' },
                    { label: 'Data', percentage: '7.68%', value: '4K' },
                  ].map((item, index) => (
                    <tr key={index} className="border-b last:border-b-0">
                      <td className="py-2 flex items-center">
                        <Search className="mr-2 h-4 w-4" />
                        {item.label}
                      </td>
                      <td className="py-2 text-right">{item.percentage}</td>
                      <td className="py-2 text-right">{item.value}</td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </CardContent>
          </Card>
          <Card>
            <CardHeader>
              <CardTitle>Data</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="flex justify-center items-center h-64">
                {/* Placeholder for donut chart */}
                <div className="w-48 h-48 rounded-full border-16 border-gray-300"></div>
              </div>
              <div className="grid grid-cols-2 gap-4 mt-4">
                {[
                  { label: 'Data', value: '1.2K', change: '+8.2%' },
                  { label: 'Data', value: '1.1K', change: '+7%' },
                  { label: 'Data', value: '1K', change: '+2.5%' },
                  { label: 'Data', value: '969', change: '-6.5%', negative: true },
                  { label: 'Data', value: '891', change: '+1.7%' },
                ].map((item, index) => (
                  <div key={index} className="flex items-center">
                    <div className={`w-3 h-3 rounded-full ${index % 2 === 0 ? 'bg-gray-700' : 'bg-gray-300'} mr-2`}></div>
                    <span>{item.label}</span>
                    <span className="ml-auto">{item.value}</span>
                    <span className={`ml-2 ${item.negative ? 'text-red-500' : 'text-green-500'}`}>{item.change}</span>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </div>
      </main>
    </div>
  )
}

function MetricCard({ title, value, change, negative = false }) {
  return (
    <Card>
      <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
        <CardTitle className="text-sm font-medium">{title}</CardTitle>
      </CardHeader>
      <CardContent>
        <div className="text-2xl font-bold">{value}</div>
        <p className={`text-xs ${negative ? 'text-red-500' : 'text-green-500'}`}>
          {change}
        </p>
      </CardContent>
    </Card>
  )
}